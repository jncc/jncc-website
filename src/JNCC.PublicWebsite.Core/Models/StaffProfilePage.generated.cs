//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace JNCC.PublicWebsite.Core.Models
{
	/// <summary>Staff Profile Page</summary>
	[PublishedContentModel("StaffProfilePage")]
	public partial class StaffProfilePage : PublishedContentModel, IPageMetaInformationComposition, IPageSpecificIncludesComposition, ISeoComposition
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "StaffProfilePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StaffProfilePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StaffProfilePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("biographyContent")]
		public IHtmlString BiographyContent
		{
			get { return this.GetPropertyValue<IHtmlString>("biographyContent"); }
		}

		///<summary>
		/// Content: A brief paragraph describing this staff profile when listed on the Staff Directory Page.
		///</summary>
		[ImplementPropertyType("directoryListingContent")]
		public IHtmlString DirectoryListingContent
		{
			get { return this.GetPropertyValue<IHtmlString>("directoryListingContent"); }
		}

		///<summary>
		/// Full Name: The full name of the staff member. If no value is authored the page name is used instead.  This is useful if two staff members share the same name. Umbraco page names must be unique when they share a parent page such Staff Directory Page.  This allows authors to display all "John Smith"s as "John Smith" rather than; "John Smith", "John Smith (1)", "John Smith (2)".
		///</summary>
		[ImplementPropertyType("fullName")]
		public string FullName
		{
			get { return this.GetPropertyValue<string>("fullName"); }
		}

		///<summary>
		/// Job Title
		///</summary>
		[ImplementPropertyType("jobTitle")]
		public string JobTitle
		{
			get { return this.GetPropertyValue<string>("jobTitle"); }
		}

		///<summary>
		/// Location(s): The location(s) this staff member commonly works at.
		///</summary>
		[ImplementPropertyType("profileLocations")]
		public IEnumerable<string> ProfileLocations
		{
			get { return this.GetPropertyValue<IEnumerable<string>>("profileLocations"); }
		}

		///<summary>
		/// Profile Picture
		///</summary>
		[ImplementPropertyType("profilePicture")]
		public IPublishedContent ProfilePicture
		{
			get { return this.GetPropertyValue<IPublishedContent>("profilePicture"); }
		}

		///<summary>
		/// Team(s): The team(s) this staff member works for.
		///</summary>
		[ImplementPropertyType("profileTeams")]
		public IEnumerable<string> ProfileTeams
		{
			get { return this.GetPropertyValue<IEnumerable<string>>("profileTeams"); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("projectsContent")]
		public IHtmlString ProjectsContent
		{
			get { return this.GetPropertyValue<IHtmlString>("projectsContent"); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("publicationsContent")]
		public IHtmlString PublicationsContent
		{
			get { return this.GetPropertyValue<IHtmlString>("publicationsContent"); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("researchContent")]
		public IHtmlString ResearchContent
		{
			get { return this.GetPropertyValue<IHtmlString>("researchContent"); }
		}

		///<summary>
		/// Sort Name: The value used to sort an item in Staff Directory Page.  If no value is specified then the full name will be used followed by the node name.  This property is useful if the profile should be sorted without a title. For example: "Dr. Jane Smith" would typically be sorted under D, but specifying the value "Jane Smith" would sort the profile under J.
		///</summary>
		[ImplementPropertyType("sortName")]
		public string SortName
		{
			get { return this.GetPropertyValue<string>("sortName"); }
		}

		///<summary>
		/// Published Date: The date is when the page was first published.   This is a required property as a page with a Meta Information must have a published date.
		///</summary>
		[ImplementPropertyType("publishedDate")]
		public DateTime PublishedDate
		{
			get { return JNCC.PublicWebsite.Core.Models.PageMetaInformationComposition.GetPublishedDate(this); }
		}

		///<summary>
		/// HTML Lang Ref: This field should be used when the page is of another language.  When a value is not present in this field, the default value will be "en-GB".
		///</summary>
		[ImplementPropertyType("hTMLLangRef")]
		public string HTmllangRef
		{
			get { return JNCC.PublicWebsite.Core.Models.PageSpecificIncludesComposition.GetHTmllangRef(this); }
		}

		///<summary>
		/// Page-specific BODY Includes: Authored code includes which will only appear on this page and will be rendered at the end of the BODY tag in the HTML.  This is useful for adding tracking code. Styling should not be authored here and should instead be authored in the head.  This should be edited by administrators only.
		///</summary>
		[ImplementPropertyType("pageSpecificBodyIncludes")]
		public string PageSpecificBodyIncludes
		{
			get { return JNCC.PublicWebsite.Core.Models.PageSpecificIncludesComposition.GetPageSpecificBodyIncludes(this); }
		}

		///<summary>
		/// Page-specific HEAD Includes: Authored code includes which will only appear on this page and will be rendered at the end of the HEAD tag in the HTML.  This is useful for adding tracking code and style elements.  This should be edited by administrators only.
		///</summary>
		[ImplementPropertyType("pageSpecificHeadIncludes")]
		public string PageSpecificHeadIncludes
		{
			get { return JNCC.PublicWebsite.Core.Models.PageSpecificIncludesComposition.GetPageSpecificHeadIncludes(this); }
		}

		///<summary>
		/// NoIndex: The default value for this is False, if the checkbox is set to true the NoIndex property will be added to this page
		///</summary>
		[ImplementPropertyType("noIndex")]
		public bool NoIndex
		{
			get { return JNCC.PublicWebsite.Core.Models.SeoComposition.GetNoIndex(this); }
		}

		///<summary>
		/// SEO Settings
		///</summary>
		[ImplementPropertyType("seoSettings")]
		public SEOChecker.MVC.MetaData SeoSettings
		{
			get { return JNCC.PublicWebsite.Core.Models.SeoComposition.GetSeoSettings(this); }
		}
	}
}
