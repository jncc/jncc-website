//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace JNCC.PublicWebsite.Core.Models
{
	/// <summary>Science Slider Schema - Image & Text</summary>
	[PublishedContentModel("scienceSliderSchemaImageText")]
	public partial class ScienceSliderSchemaImageText : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "scienceSliderSchemaImageText";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ScienceSliderSchemaImageText(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ScienceSliderSchemaImageText, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Image Link
		///</summary>
		[ImplementPropertyType("imageLink")]
		public RJP.MultiUrlPicker.Models.Link ImageLink
		{
			get { return this.GetPropertyValue<RJP.MultiUrlPicker.Models.Link>("imageLink"); }
		}

		///<summary>
		/// Image Position: By setting this to "True" the image will be displayed on the bottom of the slider item. By default the image will be displayed at the top of the slider.
		///</summary>
		[ImplementPropertyType("imagePosition")]
		public bool ImagePosition
		{
			get { return this.GetPropertyValue<bool>("imagePosition"); }
		}

		///<summary>
		/// Text
		///</summary>
		[ImplementPropertyType("text")]
		public IHtmlString Text
		{
			get { return this.GetPropertyValue<IHtmlString>("text"); }
		}
	}
}
