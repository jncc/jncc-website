//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace JNCC.PublicWebsite.Core.Models
{
	// Mixin content Type 1123 with alias "navigationSettingsComposition"
	/// <summary>Navigation Settings Composition</summary>
	public partial interface INavigationSettingsComposition : IPublishedContent
	{
		/// <summary>Hide from Navigation</summary>
		bool UmbracoNaviHide { get; }

		/// <summary>Hide Children from Navigation</summary>
		bool UmbracoNaviHideChildren { get; }
	}

	/// <summary>Navigation Settings Composition</summary>
	[PublishedContentModel("navigationSettingsComposition")]
	public partial class NavigationSettingsComposition : PublishedContentModel, INavigationSettingsComposition
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationSettingsComposition";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationSettingsComposition(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationSettingsComposition, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide from Navigation: Hides the page from the main navigation.
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Hide from Navigation</summary>
		public static bool GetUmbracoNaviHide(INavigationSettingsComposition that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }

		///<summary>
		/// Hide Children from Navigation: Hides any child pages from the main navigation.
		///</summary>
		[ImplementPropertyType("umbracoNaviHideChildren")]
		public bool UmbracoNaviHideChildren
		{
			get { return GetUmbracoNaviHideChildren(this); }
		}

		/// <summary>Static getter for Hide Children from Navigation</summary>
		public static bool GetUmbracoNaviHideChildren(INavigationSettingsComposition that) { return that.GetPropertyValue<bool>("umbracoNaviHideChildren"); }
	}
}
