@model IFramePageViewModel
@{
    Layout = "Base.cshtml";
    var cookiePolicyAcceptance = "false";
    if (Request.Cookies["cookiePolicyAcceptance"] != null)
    {
        cookiePolicyAcceptance = Request.Cookies["cookiePolicyAcceptance"].Value;
    }

    string fallbackCss = "";
    string iFrameCss = "";
    <script>
        var w = window.innerWidth;
    </script>

    if (Model.showOnMedium && Model.showOnSmall)
    {
        fallbackCss = "hide-for-large";
        iFrameCss = "hide-for-small-only hide-for-medium-only";
        <script>
            if (w >= 1023) { $("body").css("overflow", "hidden") }
        </script>
    }
    else if (Model.showOnMedium)
    {
        fallbackCss = "show-for-medium-only hide-for-large";
        iFrameCss = "hide-for-medium-only";
        <script>
            if (w >= 1023) { $("body").css("overflow", "hidden") }
            if (w < 768) { $("body").css("overflow", "hidden") }
        </script>
    }
    else if (Model.showOnSmall)
    {
        fallbackCss = "show-for-small-only hide-for-large";
        iFrameCss = "hide-for-small-only";
        <script>
            if (w >= 768) { $("body").css("overflow", "hidden") }
        </script>
    }
    else
    {
        fallbackCss = "hide";
        <script>
            $("body").css("overflow", "hidden")
        </script>
    }
}

@section Header {
    <div class="">
        <div class="row expanded">
            <div class="small-1 small-offset-11">
                <span class="float-right iframe-header-toggle"><a class="openMenu @iFrameCss">Hide</a></span>
            </div>
        </div>
        <div class="row">
            <div class="large-offset-1 large-2 medium-3 small-12 columns iframe-header-logo iframe-menu">
                <strong class="logo">
                    <a href="/" accesskey="1"><img src="~/images/logo.png" alt="JNCC"></a>
                </strong>
                <div class="show-for-small-only iframe-toggle-menu-holder">
                    <div class="title-bar iframe-toggle-menu" data-responsive-toggle="menu" data-hide-for="medium">
                        <button type="button" class="nav-opener" data-toggle="menu" data-responsive-toggle="menu" aria-label="navigation-opener"><span></span></button>
                    </div>
                </div>
            </div>
            <div class="large-9 medium-9 small-12 columns iframe-header-nav iframe-menu">

                @Html.Partial("~/Views/Partials/Header/MainNavigation.cshtml", Model.Navigation)

            </div>
        </div>
    </div>
}
<main id="main">

    @if (Model.HasSections)
    {
        <div class="container @fallbackCss">
            <div class="two-columns">
                <div id="content">
                    
                    @foreach (var section in Model.Sections)
                    {
                        if (!section.HideHeadline)
                        {
                            <h2 id="@(section.HtmlId)" style="display: block">@(section.Headline)</h2>
                        }
                        @RenderScienceIFrameSection(section)
                        if (section.SubSections.Any())
                        {
                            foreach (var subSection in section.SubSections)
                            {
                                if (!subSection.HideHeadline)
                                {
                                    <h3 id="@(subSection.HtmlId)">@(subSection.Headline)</h3><br />
                                }
                                @RenderScienceIFrameSection(subSection)
                            }
                        }
                    }
                </div>
            </div>
        </div>
    }

    @if (cookiePolicyAcceptance == "true")
    {
        <script>
            $(document).ready(mapFrame);
            $(window).on('resize', mapFrame);
            function mapFrame() {
                var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
                var newH = h - 68.375;
                document.getElementById('map-frame').setAttribute("style", "height:" + newH + "px" + ";");
                document.getElementById('map-holder').setAttribute("style", "height:" + newH + "px" + ";");
            };
        </script>

        <div id="map-holder" class="@iFrameCss expanded collapse is-display-block">
            <div id="map-holder" class="responsive-embed no-margin" style="overflow: visible">
                <iframe id="map-frame" style="width:100%;height:100%" src="@Model.SourceUrl"></iframe>
            </div>
        </div>

        <script>
            function getSearchParameters() {
                var prmstr = window.location.search.substr(1);
                return prmstr != null && prmstr != "" ? transformToAssocArray(prmstr) : {};
            }
            function transformToAssocArray(prmstr) {
                var params = {};
                var prmarr = prmstr.split("&");
                for (var i = 0; i < prmarr.length; i++) {
                    var tmparr = prmarr[i].split("=");
                    params[tmparr[0]] = tmparr[1];
                }
                return params;
            }
            function applyParameters(paramlist) {
                out = "";
                for (i = 0; i < paramlist.length; i++) {
                    if (params[paramlist[i]]) {
                        out += String.fromCharCode(38) + paramlist[i] + "=" + params[paramlist[i]];
                        delete params[paramlist[i]];
                    }
                }
                return out;
            }
            var params = getSearchParameters();
            var mapsrc = applyParameters(['zoom', 'center', 'layerIds', 'baseLayerId', 'activeFilters', 'lang']);
            var ifp = window.location.origin + window.location.pathname;
            if (Object.keys(params).length) {
                ifp += "?";
                for (var key in params) ifp += key + "=" + params[key] + String.fromCharCode(38);
                ifp = ifp.substr(0, ifp.length - 1);
            }
            var p = document.getElementById('map-frame');
            if (p.src.indexOf("?") != -1) {
                p.src = p.src + "&ifp=" + btoa(ifp) + mapsrc;
            }
            else {
                p.src = p.src + "?ifp=" + btoa(ifp) + mapsrc;
            }

/**/</script>
    }
    else
    {
        if (Model.CookieError != null && !Model.CookieError.ToString().IsNullOrWhiteSpace())
        {
            <div class="@iFrameCss">
                @Model.CookieError
            </div>
        }
        else
        {
            <div class="@iFrameCss">
                <p> </p>
                <h2 style="text-align: center;">Mapper Disabled</h2>
                <p style="text-align: center;">The mapper cannot be displayed because cookies are needed to display the map. Please <button class="buttonLink" onclick="CookieAgreement()"> click here</button>, to enable cookies.</p>
            </div>
        }
    }
</main>

@helper RenderScienceIFrameSection(ScienceIFrameSectionViewModelBase section)
{
    @Html.Partial(string.Format("~/Views/Partials/IFrame/{0}.cshtml", section.PartialViewName), section)
}
